{"version":3,"sources":["Components/YTubeFrame.js","Components/AdProgram.js","Components/VideoProgram.js","Components/AdSpace.js","Layouts/Universal.js","App.js","serviceWorker.js","index.js"],"names":["YTubeFrame","props","video","url","title","id","src","frameBorder","allow","allowFullScreen","autoPlay","ads","get","adData","length","runProgram","adArray","i","j","adsPerDay","push","createAdArray","a","max","Math","floor","random","setInterval","console","log","currentVideo","splice","this","VideoProgram","state","videoIndex","running","checkData","videos","start","data","hasData","indexIsGood","e","setState","play","nextVideo","stop","newIndex","setTimeout","delay","Component","AdSpace","adObj","className","alt","Universal","mapUrl","orientation","header","dataBottomDescriptor","dataTop","dataBottom","checkOrientation","includes","renderData","placement","map","el","key","name","toUpperCase","suite","App","pathName","window","location","pathname","slice","split","building","tvIndex","axios","then","res","tv","catch","err","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6512a77d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n/*\r\n*Sample obj from ads\r\n*\r\n*   {\r\n*       name: \"company_name\",                                   // string name to maybe scroll or something in the future\r\n*       url: \"www.youtube.com/embed/adsgfkjhsfa?autoplay=1\",    // string string representing direct url to video\r\n*       adsPerDay: 3                                            // number for # of views in a day\r\n*       timeRequested: 1230                                     // number for military time\r\n*   }\r\n*https://final.simustream.com/watch/ryoulive/fd188ce355638986373ef230fbb28fd8\r\n*/\r\n\r\nexport default function YTubeFrame (props) {\r\n\r\n    const { url, title } = props.video;\r\n    return(\r\n        <iframe\r\n            id='player'\r\n            title={title}\r\n            src={url}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            autoPlay=\"1\"\r\n            >\r\n        </iframe>\r\n    )\r\n}","import adData from '../Buildings/videoData_Ads.json';\r\n\r\nconst ads = {\r\n    get: function () {\r\n        if (adData.length){\r\n            return adData;\r\n        } else return false;\r\n    },\r\n    runProgram: function () {\r\n        let adArray = [];\r\n\r\n        function createAdArray (){\r\n            for (let i = 0; i < adData.length; i++){\r\n                for (let j = 0; j < adData[i].adsPerDay; j++){\r\n                    adArray.push(adData[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function randomNum (max){\r\n            return Math.floor(Math.random() * Math.floor(max));\r\n        }\r\n        createAdArray();\r\n        for (let a = 0; a < adArray.length; a++){\r\n            let i = adArray[randomNum(adArray.length)]\r\n            //set random timer to first video\r\n            setInterval(()=>{\r\n                console.log(adArray)\r\n                //set video\r\n                this.currentVideo = adArray[i];\r\n                //delete video from array\r\n                adArray.splice(i, 1);\r\n            }, 10000)\r\n\r\n\r\n\r\n        }\r\n        this.currentVideo = null;\r\n    },\r\n    currentVideo: {}\r\n}\r\nexport default ads;","import React, {Component} from 'react';\r\nimport YTubeFrame from './YTubeFrame';\r\nimport ads from './AdProgram';\r\n\r\nimport videos from '../Buildings/videoData_Simustream.json';\r\n\r\nexport default class VideoProgram extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoIndex: 0,\r\n            currentVideo: {},\r\n            running: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.checkData(videos)){\r\n            // console.log('data found')\r\n            this.start();\r\n        };\r\n        // if(ads.get()){\r\n        //     ads.runProgram();\r\n        // };\r\n    }\r\n\r\n    checkData(data){\r\n        if(this.hasData(data) &&  this.indexIsGood(data)){\r\n            return true\r\n        }\r\n    }\r\n\r\n    hasData(data){\r\n        // if(!videos.length) throw \"no data found\";\r\n        try{\r\n            if(data.length) return true\r\n        }\r\n        catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    indexIsGood(data){\r\n        if(this.state.videoIndex < data.length){\r\n            return true;\r\n        } else return false\r\n    }\r\n\r\n\r\n    async start(){\r\n        await this.setState({\r\n            videoIndex: 0,\r\n            currentVideo: videos[0]\r\n        });\r\n        this.play();\r\n    }\r\n\r\n    async play(){\r\n        console.log('play')\r\n        await this.setState({\r\n            running: true\r\n        });\r\n        this.nextVideo();\r\n    }\r\n\r\n    playPause(){\r\n        if (this.state.running){\r\n            this.stop();\r\n        } else {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    stop(){\r\n        console.log('stop')\r\n        this.setState({\r\n            running: false\r\n        })\r\n    }\r\n\r\n    // checkAds(){\r\n    //     if(ads.currentVideo) return true;\r\n    //     return false;\r\n    // }\r\n\r\n    nextVideo() {\r\n        // console.log('next video')\r\n        const { videoIndex, currentVideo } = this.state;\r\n        let newIndex = videoIndex + 1;\r\n        if (ads.currentVideo){\r\n            console.log(ads.currentVideo)\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    currentVideo: ads.currentVideo\r\n                });\r\n                this.nextVideo();\r\n            }, currentVideo.delay * 1000)\r\n        } else\r\n        if (newIndex === videos.length){\r\n            // console.log('last video')\r\n            this.start();\r\n\r\n        } else {\r\n            setTimeout(()=>{\r\n                this.setState({\r\n                    videoIndex: newIndex,\r\n                    currentVideo: videos[newIndex]\r\n                });\r\n                this.nextVideo();\r\n            }, currentVideo.delay * 1000)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { currentVideo } = this.state;\r\n            return (\r\n                currentVideo && < YTubeFrame video={currentVideo}/>\r\n            );\r\n    }\r\n  }","import React from 'react';\r\n\r\nexport default function AdSpace(adObj){\r\n    // if (adObj){\r\n    //     return (\r\n    //         <div className='adSpace'>\r\n    //             <img className='adSpaceLogo' src={adObj.url} alt={adObj.title}></img>\r\n    //         </div>\r\n\r\n    //     )\r\n    // }else {\r\n        return (\r\n            <div className='adSpace'>\r\n                <div className=\"adText\" >To advertise here contact Suite 505</div>\r\n                <img id=\"gsemlogo\" className='adSpaceLogo' src='https://gsemtechnologies.com/wp-content/uploads/2018/01/GSEMLOGO-1.png' alt='Ad logo'></img>\r\n                <div className=\"adText\" >Your logo here</div>\r\n            </div>\r\n        )\r\n    // }\r\n}","import React, { Component } from 'react';\r\nimport VideoPlayer from '../Components/VideoProgram';\r\nimport AdSpace from '../Components/AdSpace';\r\n\r\nclass Universal extends Component {\r\n    render(){\r\n        const {\r\n          mapUrl,\r\n          orientation,\r\n          // tvName, layout, adSpaceUrl,\r\n          header,\r\n          dataBottomDescriptor,\r\n          dataTop,\r\n          dataBottom\r\n        } = this.props.data;\r\n\r\n        const checkOrientation = orientation.includes('portrait') ? 'Universal Container-vertical' : 'Universal Container';\r\n        \r\n        const renderData = function (data, placement){\r\n            return data.map((el, i)=>{\r\n                return (\r\n                    <div className={`suite ${placement}`} key={`${placement}_${i}`}>\r\n                        <span className='suiteName'>{el.name.toUpperCase()}</span>\r\n                        <span className='suiteNumber'>{el.suite}</span>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n\r\n        return(\r\n            <div className={checkOrientation}>\r\n              < AdSpace />\r\n              <img id='simustreamLogo' src='https://gsemtechnologies.com/wp-content/uploads/2018/01/SimustreamWebHorizontal-website-550x400.png' alt='Simustream company Logo'></img>\r\n              <div className='header'><h1>{header}</h1></div>\r\n              < VideoPlayer />\r\n              <img alt=\"map for this floor\" className='map' src={mapUrl}></img>\r\n              <div className='data'>\r\n                <div className='label' >THIS LEVEL</div>\r\n                {renderData(dataTop, 'top')}\r\n                <div className='label bottom' >{dataBottomDescriptor.toUpperCase()}</div>\r\n                {renderData(dataBottom, 'bottom')}\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Universal;","import React,  { Component } from 'react';\r\nimport Universal from './Layouts/Universal';\r\nimport axios from 'axios';\r\nimport './App.scss'\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  pathName = window.location.pathname.slice(1).split('/');\r\n\r\n  // grabs the tv request from the url\r\n  location = {\r\n    building: this.pathName[1],\r\n    tvIndex: this.pathName[2]\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get(`/tvdata/${this.location.building}/${this.location.tvIndex}`)\r\n      .then( res=>{\r\n        if (res.data) {\r\n          this.setState({\r\n            tv: res.data\r\n          });\r\n\r\n        }\r\n      })\r\n      .catch(err=>console.log('no data from backend'));\r\n  }\r\n\r\n  render(){\r\n    const { tv } = this.state;\r\n    if(tv && tv.orientation && tv.dataBottom.length)\r\n    {\r\n      return < Universal data={tv} />\r\n    }\r\n    else\r\n    {\r\n      return <div>  Undefined Route... format should be /tvData/[buildingName]/[tv number]  </div>\r\n    }\r\n  }\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}